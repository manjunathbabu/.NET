<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mQAAAABJRU5ErkJggg==
</value>
  </data>
</root>